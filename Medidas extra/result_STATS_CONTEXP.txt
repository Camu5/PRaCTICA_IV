#RESUMEN:
Proporci√≥n de C√©lulas Nucleadas:

Control:

Media: 19.0%
Mediana: 22.6%
Desviaci√≥n est√°ndar: 13.4%
M√≠nimo: 0%
M√°ximo: 36%
Experimental:

Media: 39.8%
Mediana: 41.9%
Desviaci√≥n est√°ndar: 30.6%
M√≠nimo: 9.48%
M√°ximo: 86.9%
Prueba de Normalidad:

Control: 
ùëä
=
0.97416
W=0.97416, p-value = 0.9012 (normal)
Experimental: 
ùëä
=
0.91439
W=0.91439, p-value = 0.4944 (normal)
Prueba t:

ùë°
=
‚àí
1.3933
t=‚àí1.3933, df = 5.4843, p-value = 0.2174. No se encuentra diferencia significativa en la media entre los grupos.
Proporci√≥n de C√©lulas Cornificadas:

Control:

Media: 43.5%
Mediana: 52%
Desviaci√≥n est√°ndar: 40.9%
M√≠nimo: 0%
M√°ximo: 87.2%
Experimental:

Media: 39.5%
Mediana: 54.8%
Desviaci√≥n est√°ndar: 37.8%
M√≠nimo: 0%
M√°ximo: 84.3%
Prueba de Normalidad:

Control: 
ùëä
=
0.86226
W=0.86226, p-value = 0.2365 (normal)
Experimental: 
ùëä
=
0.85959
W=0.85959, p-value = 0.2268 (normal)
Prueba t:

ùë°
=
0.16324
t=0.16324, df = 7.9506, p-value = 0.8744. No se encuentra diferencia significativa.
Proporci√≥n de Leucocitos:

Control:

Media: 37.5%
Mediana: 12%
Desviaci√≥n est√°ndar: 46.7%
M√≠nimo: 0%
M√°ximo: 98.1%
Experimental:

Media: 20.7%
Mediana: 0%
Desviaci√≥n est√°ndar: 39.4%
M√≠nimo: 0%
M√°ximo: 90.5%
Prueba de Normalidad:

Control: 
ùëä
=
0.80613
W=0.80613, p-value = 0.09083 (normal)
Experimental: 
ùëä
=
0.64497
W=0.64497, p-value = 0.00232 (no normal)
Prueba de Wilcoxon:

ùëä
=
15
W=15, p-value = 0.6558. No se encuentra diferencia significativa.







> # ESTAD√çSTICA PARA PR√ÅCTICA IV TALLER
> 
> # Instala paquetes si es necesario
> install.packages("tidyverse")  # Incluye ggplot2, dplyr, etc.
Error in install.packages : Updating loaded packages
> install.packages("readr")
Error in install.packages : Updating loaded packages
> 
> # Cargar librer√≠as
> library(tidyverse)
> 
> # Leer el archivo CSV
> datos <- read_csv("C:/Users/HOME/Pictures/CICLO ESTRAL/Medidas extra/DATOS_CITOLOG√çA.csv", locale = locale(encoding = "ISO-8859-1"))
Rows: 10 Columns: 10                                                                                     
‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
Delimiter: ","
chr (3): ID, CONDICI√ìN, FASE IDENTIFI.
dbl (7): Celulas nucleadas, C√©lulas cornificadas, Leucocitos, Tota...

‚Ñπ Use `spec()` to retrieve the full column specification for this data.
‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> # Verificar los datos
> head(datos)
# A tibble: 6 √ó 10
  ID     CONDICI√ìN    `FASE IDENTIFI.` `Celulas nucleadas`
  <chr>  <chr>        <chr>                          <dbl>
1 1C_10x CONTROL      METAESTRO                          7
2 1E_10x EXPERIMENTAL PROESTRO                          53
3 2C_10x CONTROL      ESTRO                             18
4 2E_10x EXPERIMENTAL ESTRO                             28
5 3C_10x CONTROL      DIESTRO                            0
6 3E_10x EXPERIMENTAL DIESTRO                           31
# ‚Ñπ 6 more variables: `C√©lulas cornificadas` <dbl>, Leucocitos <dbl>,
#   `Total c√©lulas:` <dbl>,
#   `Proporci√≥n de c√©lulas nucleadas (%)` <dbl>,
#   `Proporci√≥n de c√©lulas cornificadas (%)` <dbl>,
#   `Proporci√≥n de leucocitos (%)` <dbl>
> 
> # Convertir la columna 'Condici√≥n' en un factor
> datos$Condici√≥n <- factor(datos$CONDICI√ìN, levels = c(1, 2), labels = c("Control", "Experimental"))
> 
> # Verificar estructura de los datos
> str(datos)
spc_tbl_ [10 √ó 11] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ ID                                    : chr [1:10] "1C_10x" "1E_10x" "2C_10x" "2E_10x" ...
 $ CONDICI√ìN                             : chr [1:10] "CONTROL" "EXPERIMENTAL" "CONTROL" "EXPERIMENTAL" ...
 $ FASE IDENTIFI.                        : chr [1:10] "METAESTRO" "PROESTRO" "ESTRO" "ESTRO" ...
 $ Celulas nucleadas                     : num [1:10] 7 53 18 28 0 31 4 18 5 55
 $ C√©lulas cornificadas                  : num [1:10] 0 0 26 34 2 0 13 25 34 295
 $ Leucocitos                            : num [1:10] 24 8 6 0 101 296 0 0 0 0
 $ Total c√©lulas:                        : num [1:10] 31 61 50 62 103 327 17 43 39 350
 $ Proporci√≥n de c√©lulas nucleadas (%)   : num [1:10] 22.6 86.9 36 45.2 0 ...
 $ Proporci√≥n de c√©lulas cornificadas (%): num [1:10] 0 0 52 54.84 1.94 ...
 $ Proporci√≥n de leucocitos (%)          : num [1:10] 77.4 13.1 12 0 98.1 ...
 $ Condici√≥n                             : Factor w/ 2 levels "Control","Experimental": NA NA NA NA NA NA NA NA NA NA
 - attr(*, "spec")=
  .. cols(
  ..   ID = col_character(),
  ..   CONDICI√ìN = col_character(),
  ..   `FASE IDENTIFI.` = col_character(),
  ..   `Celulas nucleadas` = col_double(),
  ..   `C√©lulas cornificadas` = col_double(),
  ..   Leucocitos = col_double(),
  ..   `Total c√©lulas:` = col_double(),
  ..   `Proporci√≥n de c√©lulas nucleadas (%)` = col_double(),
  ..   `Proporci√≥n de c√©lulas cornificadas (%)` = col_double(),
  ..   `Proporci√≥n de leucocitos (%)` = col_double()
  .. )
 - attr(*, "problems")=<externalptr> 
> 
> # Cargar librer√≠a dplyr
> library(dplyr)
> 
> 
> ##########################################################################################################
> # ESTAD√çSTICA PARA CELULAS NUCELADAS
> 
> # Estad√≠sticas descriptivas para la proporci√≥n de c√©lulas nucleadas por condici√≥n
> descriptivas_nucleadas <- datos %>%
+   group_by(CONDICI√ìN) %>%
+   summarise(
+     media = mean(`Proporci√≥n de c√©lulas nucleadas (%)`, na.rm = TRUE),
+     mediana = median(`Proporci√≥n de c√©lulas nucleadas (%)`, na.rm = TRUE),
+     sd = sd(`Proporci√≥n de c√©lulas nucleadas (%)`, na.rm = TRUE),
+     minimo = min(`Proporci√≥n de c√©lulas nucleadas (%)`, na.rm = TRUE),
+     maximo = max(`Proporci√≥n de c√©lulas nucleadas (%)`, na.rm = TRUE)
+   )
> 
> # Mostrar resultados
> descriptivas_nucleadas
# A tibble: 2 √ó 6
  CONDICI√ìN    media mediana    sd minimo maximo
  <chr>        <dbl>   <dbl> <dbl>  <dbl>  <dbl>
1 CONTROL       19.0    22.6  13.4   0      36  
2 EXPERIMENTAL  39.8    41.9  30.6   9.48   86.9
> 
> ####################
> # Prueba de normalidad para proporci√≥n de c√©lulas nucleadas en Control
> shapiro.test(datos$`Proporci√≥n de c√©lulas nucleadas (%)`[datos$CONDICI√ìN == "CONTROL"])

	Shapiro-Wilk normality test

data:  datos$`Proporci√≥n de c√©lulas nucleadas (%)`[datos$CONDICI√ìN == "CONTROL"]
W = 0.97416, p-value = 0.9012

> 
> # Prueba de normalidad para proporci√≥n de c√©lulas nucleadas en Experimental
> shapiro.test(datos$`Proporci√≥n de c√©lulas nucleadas (%)`[datos$CONDICI√ìN == "EXPERIMENTAL"])

	Shapiro-Wilk normality test

data:  datos$`Proporci√≥n de c√©lulas nucleadas (%)`[datos$CONDICI√ìN == "EXPERIMENTAL"]
W = 0.91439, p-value = 0.4944

> ####################
> 
> # RESULTADOS:
> # PARA CONTROL: W = 0.97416, p-value = 0.9012
> # PARA EXPERIMENTAL: W = 0.91439, p-value = 0.4944
> 
> # Dado que los datos parecen ser normales
> # Prueba t para comparar la proporci√≥n de c√©lulas nucleadas entre control y experimental
> t.test(`Proporci√≥n de c√©lulas nucleadas (%)` ~ CONDICI√ìN, data = datos)

	Welch Two Sample t-test

data:  Proporci√≥n de c√©lulas nucleadas (%) by CONDICI√ìN
t = -1.3933, df = 5.4843, p-value = 0.2174
alternative hypothesis: true difference in means between group CONTROL and group EXPERIMENTAL is not equal to 0
95 percent confidence interval:
 -58.27207  16.60407
sample estimates:
     mean in group CONTROL mean in group EXPERIMENTAL 
                    18.986                     39.820 

> 
> # Cargar la librer√≠a ggplot2 para gr√°ficas
> library(ggplot2)
> 
> # Boxplot para la proporci√≥n de c√©lulas nucleadas
> ggplot(datos, aes(x = CONDICI√ìN, y = `Proporci√≥n de c√©lulas nucleadas (%)`, fill = CONDICI√ìN)) +
+   geom_boxplot() +
+   labs(title = "Comparaci√≥n respecto a las c√©lulas nucleadas",
+        x = "Condici√≥n",
+        y = "Proporci√≥n de C√©lulas Nucleadas (%)") +
+   theme_minimal()
> 
> 
> ##########################################################################################################
> 
> 
> ##########################################################################################################
> # ESTAD√çSTICA PARA CELULAS CORNIFICADAS
> 
> # Estad√≠sticas descriptivas para la proporci√≥n de c√©lulas cornificadas por condici√≥n
> descriptivas_cornificadas <- datos %>%
+   group_by(CONDICI√ìN) %>%
+   summarise(
+     media = mean(`Proporci√≥n de c√©lulas cornificadas (%)`, na.rm = TRUE),
+     mediana = median(`Proporci√≥n de c√©lulas cornificadas (%)`, na.rm = TRUE),
+     sd = sd(`Proporci√≥n de c√©lulas cornificadas (%)`, na.rm = TRUE),
+     minimo = min(`Proporci√≥n de c√©lulas cornificadas (%)`, na.rm = TRUE),
+     maximo = max(`Proporci√≥n de c√©lulas cornificadas (%)`, na.rm = TRUE)
+   )
> 
> # Mostrar resultados
> print(descriptivas_cornificadas)
# A tibble: 2 √ó 6
  CONDICI√ìN    media mediana    sd minimo maximo
  <chr>        <dbl>   <dbl> <dbl>  <dbl>  <dbl>
1 CONTROL       43.5    52    40.9      0   87.2
2 EXPERIMENTAL  39.5    54.8  37.8      0   84.3
> 
> # Prueba de normalidad para proporci√≥n de c√©lulas cornificadas en Control
> shapiro.test(datos$`Proporci√≥n de c√©lulas cornificadas (%)`[datos$CONDICI√ìN == "CONTROL"])

	Shapiro-Wilk normality test

data:  datos$`Proporci√≥n de c√©lulas cornificadas (%)`[datos$CONDICI√ìN == "CONTROL"]
W = 0.86226, p-value = 0.2365

> 
> # Prueba de normalidad para proporci√≥n de c√©lulas cornificadas en Experimental
> shapiro.test(datos$`Proporci√≥n de c√©lulas cornificadas (%)`[datos$CONDICI√ìN == "EXPERIMENTAL"])

	Shapiro-Wilk normality test

data:  datos$`Proporci√≥n de c√©lulas cornificadas (%)`[datos$CONDICI√ìN == "EXPERIMENTAL"]
W = 0.85959, p-value = 0.2268

> 
> # RESULTADOS:
> # PARA CONTROL: W = 0.86226, p-value = 0.2365
> # PARA EXPERIMENTAL: W = 0.85959, p-value = 0.2268
> 
> # Dado que los datos parecen ser normales
> t.test(`Proporci√≥n de c√©lulas cornificadas (%)` ~ CONDICI√ìN, data = datos)

	Welch Two Sample t-test

data:  Proporci√≥n de c√©lulas cornificadas (%) by CONDICI√ìN
t = 0.16324, df = 7.9506, p-value = 0.8744
alternative hypothesis: true difference in means between group CONTROL and group EXPERIMENTAL is not equal to 0
95 percent confidence interval:
 -53.40817  61.53617
sample estimates:
     mean in group CONTROL mean in group EXPERIMENTAL 
                    43.518                     39.454 

> 
> # Boxplot para la proporci√≥n de c√©lulas cornificadas
> ggplot(datos, aes(x = CONDICI√ìN, y = `Proporci√≥n de c√©lulas cornificadas (%)`, fill = CONDICI√ìN)) +
+   geom_boxplot() +
+   labs(title = "Comparaci√≥n de Proporci√≥n de C√©lulas Cornificadas",
+        x = "Condici√≥n",
+        y = "Proporci√≥n de C√©lulas Cornificadas (%)") +
+   theme_minimal()
> ##########################################################################################################
> 
> ##########################################################################################################
> # ESTAD√çSTICA PARA LEUCOCITOS
> 
> # Estad√≠sticas descriptivas para la proporci√≥n de leucocitos por condici√≥n
> descriptivas_leucocitos <- datos %>%
+   group_by(CONDICI√ìN) %>%
+   summarise(
+     media = mean(`Proporci√≥n de leucocitos (%)`, na.rm = TRUE),
+     mediana = median(`Proporci√≥n de leucocitos (%)`, na.rm = TRUE),
+     sd = sd(`Proporci√≥n de leucocitos (%)`, na.rm = TRUE),
+     minimo = min(`Proporci√≥n de leucocitos (%)`, na.rm = TRUE),
+     maximo = max(`Proporci√≥n de leucocitos (%)`, na.rm = TRUE)
+   )
> 
> # Mostrar resultados
> print(descriptivas_leucocitos)
# A tibble: 2 √ó 6
  CONDICI√ìN    media mediana    sd minimo maximo
  <chr>        <dbl>   <dbl> <dbl>  <dbl>  <dbl>
1 CONTROL       37.5      12  46.7      0   98.1
2 EXPERIMENTAL  20.7       0  39.4      0   90.5
> 
> # Prueba de normalidad para proporci√≥n de leucocitos en Control
> shapiro.test(datos$`Proporci√≥n de leucocitos (%)`[datos$CONDICI√ìN == "CONTROL"])

	Shapiro-Wilk normality test

data:  datos$`Proporci√≥n de leucocitos (%)`[datos$CONDICI√ìN == "CONTROL"]
W = 0.80613, p-value = 0.09083

> 
> # Prueba de normalidad para proporci√≥n de leucocitos en Experimental
> shapiro.test(datos$`Proporci√≥n de leucocitos (%)`[datos$CONDICI√ìN == "EXPERIMENTAL"])

	Shapiro-Wilk normality test

data:  datos$`Proporci√≥n de leucocitos (%)`[datos$CONDICI√ìN == "EXPERIMENTAL"]
W = 0.64497, p-value = 0.00232

> ####################
> 
> # RESULTADOS:
> # PARA CONTROL: W = 0.80613, p-value = 0.09083
> # PARA EXPERIMENTAL: W = 0.64497, p-value = 0.00232
> 
> # Dado que los datos parecen NO ser normales
> wilcox.test(`Proporci√≥n de leucocitos (%)` ~ CONDICI√ìN, data = datos)

	Wilcoxon rank sum test with continuity correction

data:  Proporci√≥n de leucocitos (%) by CONDICI√ìN
W = 15, p-value = 0.6558
alternative hypothesis: true location shift is not equal to 0

Warning message:
In wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...) :
  cannot compute exact p-value with ties
> 
> # Boxplot para la proporci√≥n de leucocitos
> ggplot(datos, aes(x = CONDICI√ìN, y = `Proporci√≥n de leucocitos (%)`, fill = CONDICI√ìN)) +
+   geom_boxplot() +
+   labs(title = "Comparaci√≥n de Proporci√≥n de Leucocitos",
+        x = "Condici√≥n",
+        y = "Proporci√≥n de Leucocitos (%)") +
+   theme_minimal()
> ##########################################################################################################
> 
> ##########################################################################################################
> #GR√ÅFRICA PARA TODAS
> install.packages("patchwork")  # Solo si no lo tienes instalado
Error in install.packages : Updating loaded packages
> library(patchwork)
> 
> # Ejemplo de c√≥mo podr√≠as haber creado tus gr√°ficas
> grafica_nucleadas <- ggplot(datos, aes(x = CONDICI√ìN, y = `Celulas nucleadas`)) + 
+   geom_boxplot() + 
+   labs(title = "C√©lulas Nucleadas por Condici√≥n")
> 
> grafica_cornificadas <- ggplot(datos, aes(x = CONDICI√ìN, y = `C√©lulas cornificadas`)) + 
+   geom_boxplot() + 
+   labs(title = "C√©lulas Cornificadas por Condici√≥n")
> 
> grafica_leucocitos <- ggplot(datos, aes(x = CONDICI√ìN, y = Leucocitos)) + 
+   geom_boxplot() + 
+   labs(title = "Leucocitos por Condici√≥n")
> # Combinar las tres gr√°ficas
> combinacion_graficas <- grafica_nucleadas + grafica_cornificadas + grafica_leucocitos + 
+   plot_layout(ncol = 1)  # Cambia ncol a 2 o m√°s para un dise√±o diferente
> 
> # Mostrar la combinaci√≥n de gr√°ficas
> print(combinacion_graficas)
> ##########################################################################################################
> 
> # Gr√°fico de viol√≠n para C√©lulas Nucleadas
> grafico_violin_nucleadas <- ggplot(datos, aes(x = CONDICI√ìN, y = `Proporci√≥n de c√©lulas nucleadas (%)`, fill = CONDICI√ìN)) +
+   geom_violin(trim = FALSE) +
+   labs(title = "Distribuci√≥n de Proporci√≥n de C√©lulas Nucleadas por Condici√≥n", 
+        x = "Condici√≥n", y = "Proporci√≥n de C√©lulas Nucleadas (%)") +
+   theme_minimal()
> 
> # Mostrar gr√°fico
> print(grafico_violin_nucleadas)
> 
> # Gr√°fico de viol√≠n para C√©lulas Cornificadas
> grafico_violin_cornificadas <- ggplot(datos, aes(x = CONDICI√ìN, y = `Proporci√≥n de c√©lulas cornificadas (%)`, fill = CONDICI√ìN)) +
+   geom_violin(trim = FALSE) +
+   labs(title = "Distribuci√≥n de Proporci√≥n de C√©lulas Cornificadas por Condici√≥n", 
+        x = "Condici√≥n", y = "Proporci√≥n de C√©lulas Cornificadas (%)") +
+   theme_minimal()
> 
> # Mostrar gr√°fico
> print(grafico_violin_cornificadas)
> 
> # Gr√°fico de viol√≠n para Leucocitos
> grafico_violin_leucocitos <- ggplot(datos, aes(x = CONDICI√ìN, y = `Proporci√≥n de leucocitos (%)`, fill = CONDICI√ìN)) +
+   geom_violin(trim = FALSE) +
+   labs(title = "Distribuci√≥n de Proporci√≥n de Leucocitos por Condici√≥n", 
+        x = "Condici√≥n", y = "Proporci√≥n de Leucocitos (%)") +
+   theme_minimal()
> 
> # Mostrar gr√°fico
> print(grafico_violin_leucocitos)
> 
> # Gr√°fico de barras apiladas para todas las proporciones de c√©lulas
> library(tidyr)  # Necesario para gather
> 
> grafico_barras_apiladas <- datos %>%
+   gather(key = "TipoCelula", value = "Proporcion", 
+          `Proporci√≥n de c√©lulas nucleadas (%)`, 
+          `Proporci√≥n de c√©lulas cornificadas (%)`, 
+          `Proporci√≥n de leucocitos (%)`) %>%
+   ggplot(aes(x = CONDICI√ìN, y = Proporcion, fill = TipoCelula)) +
+   geom_bar(stat = "identity", position = "fill") +
+   labs(title = "Composici√≥n de Tipos de C√©lulas por Condici√≥n",
+        x = "Condici√≥n", y = "Proporci√≥n (%)") +
+   theme_minimal()
> 
> # Mostrar gr√°fico
> print(grafico_barras_apiladas)
> 